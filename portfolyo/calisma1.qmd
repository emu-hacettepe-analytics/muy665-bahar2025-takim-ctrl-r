---
title: "Çalışma 1"
---

## 

Bu Çalışmada MÜY665 İş Analitiği 2024-2025 Bahar Dönemi için verilen birinci grup ödevinin ilk aşaması verilmektedir. Bu çalışma 3 bölümden oluşmaktadır. İlk kısımda Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler serisinden video özeti bulunmaktadır.

İkinci olarak mtcar veri seti incelenerek çeşitli istatistiksel bilgileri bir liste olarak döndüren fonksiyon tanımı yapılmıştır.

Son olarak na_exaple veri seti içerisindeki toplam NA sayısı bulunmuştur. NA verisi 2025 değeri ile değiştirilerek kaç adet 2025 değeri olduğu kontrol edilmiştir.

**a) Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler - Mustafa Baydoğan & Erdi Daşdemir Söyleşi Videosunun Özeti**

**KONU:Veriye Dayalı Karar Verme Farklı Sektörlerden Uygulamalar**

Endüstri mühendisleri profesyonel hayatlarında genellikle optimizasyon problemleriyle yüzleşmekte ve bu sorunlara çözüm üretmek amacıyla çeşitli araçlardan yararlanmaktadır. Bu araçlar arasında en önemlileri matematiksel modelleme ve simülasyondur. Matematiksel modellemeyle ifade edilemeyen sorunlar, olasılık temelli yaklaşımlar aracılığıyla ele alınabilir.

Son yıllarda veri analizi ve veri madenciliği yöntemlerinin giderek daha fazla kullanılmaya başladığı gözlemlenmektedir. Bu gelişmenin temelinde, endüstri mühendislerinin sahip olduğu matematik tabanlı eğitimin etkili olması yatmaktadır. Bu alanlar detaylı incelendiğinde, makine öğrenmesinin bir parçası oldukları görülmektedir.

Mühendislik disiplininin özünde problem çözmek yer almaktadır. Bu süreç belirli aşamalar çerçevesinde gerçekleştirilmektedir:

-   İlk olarak, mevcut problemin ne olduğu belirlenip tanımlanmalıdır.
-   Sorunun olası nedenleri belirlenmelidir.
-   Problemin sayısal olarak ifade edilmesi sağlanmalıdır. Bu aşamada, yalnızca tek bir çözüm üretmek yerine farklı alternatifler geliştirilmeli ve kıyaslama yöntemleri kullanılmalıdır.
-   Alternatif çözümler arasından en uygun olanın belirlenmesiyle problem çözülebilir.

**Problem Örneği: Kereste Bükülme Tahmini**

***Problem Tanımı:***

Yaş kerestenin kurutma işlemi sonrasındaki bükülme miktarının tahmin edilmesi.

Ev yapımında kullanılan yaş keresteler kurutma sürecinde yamulabilmektedir. Hangi kerestelerin bücüleceği önceden tahmin edilebilirse, stabilizasyon gibi önleyici önlemler alınarak bu sorun engellenebilir.

***Problemin Önemi:***

Düz kerestenin fiyatı yaklaşık 10\$ iken, yamulmuş kerestenin fiyatı 2\$'a kadar düşebilmektedir.

***Problemin Kaynakları:***

-   Kesim noktasına bağlı olarak ağaç halkalarının oryantasyonu.

-   Ağaç gövdelerindeki budak noktaları.

-   Kerestenin yaşlı ve genç odun oranı.

***Veri Kaynakları:***

-   Yaş kereste görselleri.

-   Kurutma süreci sonrasında elde edilen ölçüm verileri.

***Çözüm Yöntemleri:***

-   Farklı açılardan çekilen görüntüler birleştirilerek tek bir veri seti oluşturulmalıdır.

-   Görüntü işleme yöntemleriyle detaylı analiz yapılmalıdır.

-   Sayısal veriye dönüştürülen bu görseller tahmin algoritmalarına dahil edilmelidir.

***Beklenen Etki:***

Ciroda %5 oranında artış.

**Problem Örneği: Elektrik Üretim Tahmini**

***Problem Tanımı:***

Elektrik üretiminin tüketim ihtiyacına uygun olarak düzenlenmesi ve fazla ya da eksik üretimin önlenmesi.

Elektrik tüketimi doğrultusunda dengeli bir üretim planı gerekmektedir. Arz ve talep dengesi doğru tahmin edilerek kayıplar minimize edilmelidir.

***Problemin Önemi:***

Yıllık elektrik dengesizlik miktarı: 19,1 TWh

Net zarar: 421 Milyon TL

***Veri Kaynakları:***

-   Bölge bazlı tüketim verileri.

-   Lisanssız santrallerin üretim verileri.

-   Saatlik bazda Türkiye genelindeki elektrik tüketimi.

-   Hava durumu verileri.

-   Resmi ve özel günler.

***Çözüm Yöntemleri:***

-   Sezonsal bazda elektrik ihtiyacını tahmin etmek.

-   Sayısal verileri kullanarak tahmin algoritmaları geliştirmek.

-   Tahminlerin aralıklı yapılması.

***Beklenen Etki:***

Var olan sisteme kıyasla 6 Milyon TL kar.

Makine öğrenme teknikleri, optimizasyon süreçlerini iyileştirmek amacıyla giderek daha fazla benimsenmektedir. Geçmişte çözülmüş optimizasyon problemlerinin verileri, yeni problemlerin çözümünde yeniden kullanılarak daha verimli yaklaşımlar geliştirilmektedir.

**b) Fonksiyonlar ve döngüler ile veri özetleme için ödev yönergesinde verilen direktiflere göre fonksiyonlar oluşturma**

```{r}
data(mtcars) #mtcars veri setini çağırıyoruz
  my_summary_stats<-function(y){ 
    ortalamalar<-c() #verilerin depolanması için boş vektörler belirliyoruz
    medianlar<-c()
    sapmalar<-c()
    minimumlar<-c()
    maximumlar<-c()
    ozellikler<-c()
    for (x in 1:length(y)) { #farklı tip veri setlerinde de fonksiyonun çalışabilmesi için for döngüsünü veri setinin sütun sayısına bağlıyoruz
      if (is.numeric(y[[x]])) { #sütunun numeric olup olmadığını kontrol ettiriyoruz
       ortalamalar<-c(ortalamalar,mean(y[[x]])) #vektörlerimizin içini ilgili fonksiyonlarla dolduruyoruz
       medianlar<-c(medianlar,median(y[[x]]))
       sapmalar<-c(sapmalar,sd(y[[x]]))
       minimumlar<-c(minimumlar,min(y[[x]]))
       maximumlar<-c(maximumlar,max(y[[x]]))
       ozellikler<-c(ozellikler,names(y[x]))
      }}
    formul_sonuc<<-data.frame(ozellikler,ortalamalar,medianlar,sapmalar,minimumlar,maximumlar) #sonuçlarımızı toplu bir şekilde raporlayabilmek için vektörlerimizden dataframe oluşturuyoruz
    return(formul_sonuc)}

my_summary_stats(mtcars)

apply_my_summary_stats<-function(y){ #bir önceki aşamada for döngüsü ile yazdığımız fomülü bu sefer apply fonksiyonu yardımı ile oluşturacağız
numerik_kolon<-y[sapply(y,is.numeric)] #veri setimizi sadece numerik kolonlardan oluşur hale getiriyoruz
      ortalamalar<-apply(numerik_kolon,2,mean) #apply fonksiyonu yardımı ile vektörlerimizi oluşturup içlerini dolduruyoruz
      medianlar<-apply(numerik_kolon,2,median)
      sapmalar<-apply(numerik_kolon,2,sd)
      minimumlar<-apply(numerik_kolon,2,min)
      maximumlar<-apply(numerik_kolon,2,max)
      ozellikler=names(numerik_kolon)
  formul_sonuc<<-data.frame(ozellikler,ortalamalar,medianlar,sapmalar,minimumlar,maximumlar)#sonuçlarımızı toplu bir şekilde raporlayabilmek için vektörlerimizden dataframe oluşturuyoruz
  return(formul_sonuc)}

apply_my_summary_stats(mtcars)
my_summary_stats(mtcars)
```

**c) dslabs paketi içinde bulunan "na_example" veri setinde kaç adet NA verisi olduğunun hesaplanması**

```{r}
library(dslabs) #dslabs paketini çağırıyoruz    
data(na_example) #na_example veri setini çağırıyoruz
sum(is.na(na_example)) #na_example veri seti içinde kaç adet NA değer olduğunu buluyoruz
degistir<-ifelse(is.na(na_example),2025,na_example) #na_example veri seti içindeki NA değerleri 2025 ile değiştiriyoruz
sum(is.na(degistir)) #bütün NA değerlerin değiştirildiğinden emin oluyoruz
sum(degistir==2025) # kontrol amaçlı olarak revize veri setimizde kaç adet 2025 var diye kontrol ediyoruz.
```

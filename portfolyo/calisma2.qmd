---
title: "Çalışma 2"
---

- [Veri Seti](/assets/veri_edited_en.csv)
- [Veri Seti](/assets/bosanma_verisi_edited.csv)

Projemizde yaptığımız veri analizinin kodlarını aşağıda görebilirsiniz;

```{r}

# Kütüphaneler
suppressPackageStartupMessages(library(readr))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(tidyr))  # pivot_longer fonksiyonu için

# Read bar data
bar_data <- read.csv("./calisma2-veriler/veri_edited_en.csv", header = TRUE, encoding = "UTF-8", sep = ";")

# bar_data ilk 10 satır
knitr::kable(head(bar_data, 10), caption = "Veri Setinin İlk 10 Satırı")

# Reshape bar data to long format
bar_data_long <- bar_data %>%
  pivot_longer(cols = c("illiterate_total", "literate_without_diploma_total", "primary_school_total", "primary_education_total",
                        "lower_secondary_school_total", "upper_secondary_school_total",
                        "universities_and_other_higher_educational_institutions_total",
                        "master_total", "doctorate_total"), names_to = "EducationLevel", values_to = "Total")

# Eğitim düzeyi dağılımı için pie chart
education_summary <- bar_data_long %>%
    group_by(EducationLevel) %>%
    summarize(Total = sum(Total, na.rm = TRUE))

  print(ggplot(education_summary, aes(x = "", y = Total, fill = EducationLevel)) +
    geom_bar(stat = "identity", width = 1) +
    coord_polar("y", start = 0) +
    labs(title = "Eğitim Düzeyi Dağılımı", fill = "Eğitim Düzeyi") +
    theme_void() +
    geom_text(aes(label = paste0(round((Total / sum(Total)) * 100, 1), "%")), 
              position = position_stack(vjust = 0.5)) +
      scale_fill_manual(values = c("doctorate_total" ="#74a0e3",
                               "illiterate_total" = "#2f4b7c", 
                               "literate_without_diploma_total" = "#665191",
                               "lower_secondary_school_total" = "#6fd7c4",
                               "master_total" = "#a05195",
                               "primary_education_total" = "#d45087",
                               "primary_school_total" = "#f95d6a", "universities_and_other_higher_educational_institutions_total" ="#9cd365",
                               "upper_secondary_school_total" ="#ffa600"
                               ),
                    labels = c("Doktora Mezunları",
                               "Okuma Yazma Bilmeyen",
                               "Okur Yazar Olup Okul Bitirmeyen",
                               "Ortaokul Mezunları",
                               "Yüksek Lisans Mezunları",
                               "İlkokul Mezunları",
                               "İlköğretim Mezunları",
                               "Lisans Mezunları",
                               "Lise Mezunları"
                               )))

#Create bar graph through years w/ education data
print(ggplot(bar_data_long, aes(x = year, fill = EducationLevel)) +
      geom_bar(aes(y = Total), stat = "identity", position = "dodge", alpha = 1) +
        scale_fill_manual(values = c("doctorate_total" ="#74a0e3",
                               "illiterate_total" = "#2f4b7c", 
                               "literate_without_diploma_total" = "#665191",
                               "lower_secondary_school_total" = "#6fd7c4",
                               "master_total" = "#a05195",
                               "primary_education_total" = "#d45087",
                               "primary_school_total" = "#f95d6a", "universities_and_other_higher_educational_institutions_total" ="#9cd365",
                               "upper_secondary_school_total" ="#ffa600"
                               ),
                    labels = c("Doktora Mezunları",
                               "Okuma Yazma Bilmeyen",
                               "Okur Yazar Olup Okul Bitirmeyen",
                               "Ortaokul Mezunları",
                               "Yüksek Lisans Mezunları",
                               "İlkokul Mezunları",
                               "İlköğretim Mezunları",
                               "Lisans Mezunları",
                               "Lise Mezunları"
                               )) +
        scale_y_continuous(
      name = "Kişi Sayısı",
      labels = function(x) paste(x / 1e6, "M"),
      limits = c(0, NA)
    ) +
    scale_x_continuous(
      name = "Years",
      breaks = 2018:2023
    ))

# Read line data
line_data <- read.csv("./calisma2-veriler/bosanma_verisi_edited.csv", header = TRUE, encoding = "UTF-8", sep = ";")

# line_data ilk 10 satır
knitr::kable(head(line_data, 10), caption = "Veri Setinin İlk 10 Satırı")

 #read region data
  region_data <- read.csv("./calisma2-veriler/bosanma_bolge.csv", header = TRUE, encoding = "UTF-8", sep = ";")

 # Create line graph throught years acc to regions
  print(ggplot(region_data, aes(x = year)) +
    geom_line(aes(x=year, y = TR, color ="TR"), linewidth = 1) +
    geom_line(aes(x = year, y = Akdeniz, color = "Akdeniz"), linewidth = 1) +
    geom_line(aes(x = year, y = Guneydogu.Anadolu, color = "Guneydogu.Anadolu"), linewidth = 1) +
    geom_line(aes(x=year, y= Ege, color ="Ege"), linewidth = 1) +
    geom_line(aes(x = year, y=Marmara, color ="Marmara"), linewidth = 1) +
    geom_line(aes(x = year, y = Dogu.Anadolu, color="Dogu.Anadolu"), linewidth = 1) +
    geom_line(aes(x = year, y = Ic.Anadolu, color ="Ic.Anadolu"), linewidth = 1) +
    geom_line(aes(x = year, y = Karadeniz, color ="Karadeniz"), linewidth = 1) +
      scale_color_manual(name = "Bölgeler",
                     values = c("Akdeniz" = "#74a0e3", "Guneydogu.Anadolu" = "#e8d359", "Ege" = "#9cd365" , "Marmara" = "#db90e9" , "Dogu.Anadolu" ="#6fd7c4" , "TR" = "brown" , "Ic.Anadolu" = "#e78480","Karadeniz"="#ef9d63")) +
    scale_y_continuous(
      name = "Boşanma Sayısı",
      labels = function(x) paste(x / 1e3, "K"),
      limits = c(0, NA)
    ) +
    scale_x_continuous(
      name = "Years",
      breaks = 2018:2023  # Step 1 on x-axis
    ) +
    labs(title = "Bölgelere Göre Boşanma Sayıları") +
    theme_minimal())

 # Create line grapfh throught years
  print(ggplot(line_data, aes(x = year)) +
    geom_line(aes(x = year, y = Ankara, color = "Ankara"), linewidth = 1) +
    geom_line(aes(x = year, y = Konya, color = "Konya"), linewidth = 1) +
    geom_line(aes(x = year, y = Malatya, color = "Malatya"), linewidth = 1) +
    geom_line(aes(x=year, y= Elazığ, color = "Elazığ"), linewidth = 1) +
      scale_color_manual(name = "İller",
                     values = c("Ankara" = "#e78480", "Konya" = "#ef9d63", "Malatya" = "#6fd7c4", "Elazığ" = "#9cd365")) +
    scale_y_continuous(
      name = "Boşanma Sayısı",
      labels = function(x) paste(x / 1e3, "K"),
      limits = c(0, NA)
    ) +
    scale_x_continuous(
      name = "Years",
      breaks = 2018:2023  # Step 1 on x-axis
    ) +
    labs(title = "Bazı İllerdeki Boşanma Karşılaştırması") +
    theme_minimal())

# Merge data to ensure categories are aligned
merged_data <- merge(bar_data_long, line_data, by = "year", all.x = TRUE)

# İl listesini tanımlama
iller <- c("TR")

for (il in iller) {
  max_value <- max(merged_data[il])
  coef <- 10e6/max_value
  
  # Create the dual-axis plot
  print(ggplot(merged_data, aes(x = year, fill = EducationLevel)) +
    geom_bar(aes(y = Total), stat = "identity", position = "dodge", alpha = 1) +
    geom_line(aes(x = year, y = !!sym(il) * coef, group = "bosanma", color="Türkiye"), linewidth = 1) +
   scale_fill_manual(values = c("doctorate_total" ="#74a0e3",
                               "illiterate_total" = "#2f4b7c", 
                               "literate_without_diploma_total" = "#665191",
                               "lower_secondary_school_total" = "#6fd7c4",
                               "master_total" = "#a05195",
                               "primary_education_total" = "#d45087",
                               "primary_school_total" = "#f95d6a", "universities_and_other_higher_educational_institutions_total" ="#9cd365",
                               "upper_secondary_school_total" ="#ffa600"
                               ),
                    labels = c("Doktora Mezunları",
                               "Okuma Yazma Bilmeyen",
                               "Okur Yazar Olup Okul Bitirmeyen",
                               "Ortaokul Mezunları",
                               "Yüksek Lisans Mezunları",
                               "İlkokul Mezunları",
                               "İlköğretim Mezunları",
                               "Lisans Mezunları",
                               "Lise Mezunları"
                               )) +
    scale_color_manual(values = c("Türkiye" = "brown"), name = "Boşanma Sayısı") +
    scale_y_continuous(
      name = "Kişi Sayısı",
      sec.axis = sec_axis(~ . / coef, name="Boşanma Sayısı",
                          labels = function(x) paste(x / 1e3, "K")),
      labels = function(x) paste(x / 1e6, "M"),
      limits = c(0, NA)
    ) +
    scale_x_continuous(
      name = "Years",
      breaks = 2018:2023  # Step 1 on x-axis
    ) +
    labs(title = ifelse(il == "TR", "2018-2023 Yılları Arası Turkiye Geneli Eğitim Duzeyleri", paste("2018-2023 Yılları Arası", il, "Egitim Duzeyleri")), fill = "Eğitim Durumu") +
    theme_minimal())
}

iller <- c("İstanbul", "Ankara", "İzmir", "Ardahan", "Bayburt", "Tunceli")

for (il in iller) {
  max_value <- max(merged_data[il])
  coef <- 10e6/max_value
  
  # Create the dual-axis plot
  print(ggplot(merged_data, aes(x = year, fill = EducationLevel)) +
    geom_bar(aes(y = Total), stat = "identity", position = "dodge", alpha = 1) +
    geom_line(aes(x = year, y = !!sym(il) * coef, group = "bosanma", color = "bosanma"), linewidth = 1) +
   scale_fill_manual(values = c("doctorate_total" ="#74a0e3",
                               "illiterate_total" = "#2f4b7c", 
                               "literate_without_diploma_total" = "#665191",
                               "lower_secondary_school_total" = "#6fd7c4",
                               "master_total" = "#a05195",
                               "primary_education_total" = "#d45087",
                               "primary_school_total" = "#f95d6a", "universities_and_other_higher_educational_institutions_total" ="#9cd365",
                               "upper_secondary_school_total" ="#ffa600"
                               ),
                    labels = c("Doktora Mezunları",
                               "Okuma Yazma Bilmeyen",
                               "Okur Yazar Olup Okul Bitirmeyen",
                               "Ortaokul Mezunları",
                               "Yüksek Lisans Mezunları",
                               "İlkokul Mezunları",
                               "İlköğretim Mezunları",
                               "Lisans Mezunları",
                               "Lise Mezunları"
                               )) +
    scale_color_manual(values = c("bosanma" = "brown"), name = "Boşanma Sayısı" , labels= c(il)) +
    scale_y_continuous(
      name = "Kişi Sayısı",
      sec.axis = sec_axis(~ . / coef, name="Boşanma Sayısı",
                          labels = function(x) paste(x / 1e3, "K")),
      labels = function(x) paste(x / 1e6, "M")
    ) +
    scale_x_continuous(
      name = "Years",
      breaks = 2018:2023  # Step 1 on x-axis
    ) +
    labs(title = ifelse(il == "TR", "2018-2023 Yılları Arası Turkiye Geneli Eğitim Duzeyleri", paste("2018-2023 Yılları Arası", il, "Egitim Duzeyleri")), fill = "Eğitim Durumu") +
    theme_minimal())
}

library(knitr)

data <- data.frame(
  İl = c("İstanbul", "Ankara", "İzmir", "Ardahan", "Bayburt", "Tunceli"),
  Eğitim_Düzeyi = c("En yüksek, çeşitlilik fazla",
                    "Akademik yoğunluk belirgin",
                    "Modern, yüksek eğitimli",
                    "Düşük eğitim, düşük boşanma",
                    "Orta seviye eğitim",
                    "Orta seviye eğitim"),
  Boşanma_Sayısı = c("En yüksek artış",
                     "Orta düzey artış",
                     "Artan trend",
                     "En düşük, yeni artış",
                     "Dalgalı",
                     "Artış Eğilimli"),
  Gözlem = c("Büyükşehir etkisi, bireyselcilik",
             "Memur ve öğrenci yoğunluğu etkisi",
             "Kadın bağımsızlığı ve şehir yaşamı",
             "Kırsal yapıdan kentselleşmeye geçiş",
             "Az nüfuslu, düşük boşanma oranı",
             "Az nüfuslu, nispeten daha yüksek boşanma oranı")
)

kable(data, format = "markdown")


```